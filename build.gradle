ext {
    elasticsearchVersion = "7.2.0"
    projectVersion = project.hasProperty('release') ? "${baseVersion}-RELEASE" : "${baseVersion}-SNAPSHOT"
}

subprojects {

    apply plugin: 'java'

    group 'pers.lyks.kerberos'
    version "${projectVersion}"

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        mavenLocal()
        maven { url 'https://maven.aliyun.com/repository/public' }
        mavenCentral()
    }

    dependencies {
        testCompile group: 'junit', name: 'junit', version: '4.12'

        compile("org.slf4j:slf4j-api:1.7.25")

        compileOnly group: 'org.springframework.boot', name: 'spring-boot', version: '2.1.6.RELEASE'

        annotationProcessor "org.springframework.boot:spring-boot-configuration-processor:2.1.6.RELEASE"

        compileOnly("org.springframework.boot:spring-boot-autoconfigure:2.1.6.RELEASE")

        compileOnly("org.springframework.boot:spring-boot-autoconfigure-processor:2.1.6.RELEASE")


        if ("${project.name}".endsWith("sample")) {
            compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '2.1.6.RELEASE'
            compile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.1.6.RELEASE'
            compile group: 'org.yaml', name: 'snakeyaml', version: '1.25'
        }
    }

    if ("${project.name}".endsWith("sample")) {
        task release(type: Zip) {
            dependsOn("build")

            destinationDirectory = file("${buildDir}/release")

            from("${buildDir}/libs") {
                exclude("*.jar")
            }
            into("libs") {
                from("${buildDir}/libs") {
                    include("*.jar")
                }

                from configurations.compileClasspath
            }

            into("bin") {
                from("${projectDir}/scripts") {
                    fileMode(0755)
                }
                from("${rootDir}/scripts") {
                    fileMode(0755)
                }
            }

            into("config") {
                from("${buildDir}/resources/main")
            }
        }
    }

}