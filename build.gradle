ext {
    projectVersion = project.hasProperty('release') ? "${baseVersion}-RELEASE" : "${baseVersion}-SNAPSHOT"
}

description = "Kerberos authentication $projectVersion"
defaultTasks "clean", "build"


apply plugin: 'idea'

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}


allprojects {
    apply from: rootProject.file("gradle/dependencies.gradle")

    group "$baseGroup"
    version "$projectVersion"


    repositories {
        mavenLocal()
        maven { url 'https://maven.aliyun.com/repository/public' }
        mavenCentral()
    }


    if ("${project.name}".endsWith("autoconfigure") || "${project.name}".endsWith("api")) {

        apply plugin: 'java'
        apply plugin: 'maven-publish'

        jar {
            manifest {
                attributes(
                        "Manifest-Version": "1.0",
                        "Implementation-Title": project.name,
                        "Implementation-Version": project.version
                )
            }
        }

        task sourcesJar(type: Jar, dependsOn: classes) {
            archiveClassifier.set('sources')
            from sourceSets.main.allSource
        }

        task javadocJar(type: Jar, dependsOn: javadoc) {
            archiveClassifier.set('javadoc')
            from javadoc.destinationDir
        }

        artifacts {
            archives sourcesJar
            archives javadocJar
        }


        publishing {
            publications {
                maven(MavenPublication) {
                    groupId "$project.group"
                    artifactId "$project.name"
                    version "$project.version"

                    from components.java

                    artifact sourcesJar
                    artifact javadocJar

                    pom {
                        name = "${project.name}"
                        description = 'A kerberos authentication based on JAAS for spring autoconfigure.'
                        url = 'https://github.com/lawyerance/kerberos-authentication'
                        licenses {
                            license {
                                name = 'The Apache License, Version 2.0'
                                url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                            }
                        }
                        developers {
                            developer {
                                id = 'lawyerance'
                                name = 'lawyerance'
                                email = 'lawyerance@gmail.com'
                            }
                        }
                        scm {
                            connection = 'scm:git:git://github.com/lawyerance/kerberos-authentication.git'
                            developerConnection = 'scm:git:ssh://github.com/lawyerance/kerberos-authentication.git'
                            url = 'https://github.com/lawyerance/kerberos-authentication'
                        }
                    }
                }

            }

            repositories {
                mavenLocal()
                maven {
                    def releasesRepoUrl = "$buildDir/repos/releases"
                    def snapshotsRepoUrl = "$buildDir/repos/snapshots"
                    url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
                }
            }
        }
    }
}
